:assume Id : Π (A : Type). A → A → Type

IsContr := λ (A : Type). Σ (a : A). Π (b : A). Id(A, a, b)

IsProp := λ (A : Type). Π (a : A). Π (b : A). Id(A, a, b)

IsSet := λ (A : Type). Π (a : A). Π (b : A).
    Π (p : Id(A, a, b)). Π (q : Id(A, a, b)). Id(Id(A, a, b), p, q)

Fiber := λ (A : Type). λ (B : Type). λ (f : A → B). λ (b : B).
    Σ (a : A). Id(B, f(a), b)

IsEquiv := λ (A : Type). λ (B : Type). λ (f : A → B).
    Π (b : B). IsContr(Fiber(A, B, f, b))

IsEmbedding := λ (A : Type). λ (B : Type). λ (f : A → B).
    Π (b : B). IsProp(Fiber(A, B, f, b))
